services:
  psql-database:
    image: postgres
    ports:
      - 5432:5432
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=cmd-inventory
      - POSTGRES_DB=query-inventory
      - POSTGRES_DB=cmd_orders
      - POSTGRES_DB=query_orders

  zoo1:
    image: confluentinc/cp-zookeeper:7.3.2
    hostname: zoo1
    container_name: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_SERVERS: zoo1:2888:3888

  kafka:
    image: confluentinc/cp-kafka:7.3.2
    hostname: kafka
    container_name: kafka
    ports:
      - "9092:9092"
      - "29092:29092"
      - "9999:9999"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:19092,EXTERNAL://${DOCKER_HOST_IP:-192.168.1.70}:9092,DOCKER://host.docker.internal:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT,DOCKER:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-192.168.1.70}
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.authorizer.AclAuthorizer
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
    depends_on:
      - zoo1

  inventory-cmds:
    image: inventory-cmds
    build:
      dockerfile: Inventory/WindowShopper.Inventory.Commands/Dockerfile
      context: .
    ports:
      - 8080:8080
    depends_on:
      - psql-database
      - kafka
  
  inventory-queries:
    image: inventory-queries
    build:
      dockerfile: Inventory/WindowShopper.Inventory.Queries/Dockerfile
      context: .
    ports:
      - 8081:8081
    depends_on:
      - psql-database
      - kafka

  notifications:
    image: notifications
    build:
      dockerfile: Notifications/WindowShopper.Notifications/Dockerfile
      context: .
    ports:
      - 8082:8082
    depends_on:
      - kafka
  
  order-cmds:
    image: order-cmds
    build:
      dockerfile: Orders/WindowShopper.Orders.Commands/Dockerfile
      context: .
    ports:
      - 8090:8090
    depends_on:
      - psql-database
      - kafka

  order-queries:
    image: order-queries
    build:
      dockerfile: Orders/WindowShopper.Orders.Queries/Dockerfile
      context: .
    ports:
      - 8091:8091
    depends_on:
      - psql-database
      - kafka